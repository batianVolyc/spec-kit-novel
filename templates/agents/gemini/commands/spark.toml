description = "Refine a raw story spark into a clear creative brief."

prompt = """
---
description: Develop raw story sparks into a well-understood concept through guided conversation.
scripts:
  sh: .specify/scripts/bash/start-spark-session.sh --json
  ps: .specify/scripts/powershell/start-spark-session.ps1 -Json
---

默认情况下请使用中文与用户交流，并在写入文件时以中文记录非代码内容，除非对方明确要求使用其他语言。

用户通过 `/spark` 输入的文字即为当前灵感，请遵循以下步骤：

1. 在仓库根目录运行 `{SCRIPT}`，解析 JSON 获取 `SESSION_FILE`（确认成果）、`SESSION_LOG`（对话记录）与 `SESSION_PENDING`（待确认清单）。
2. 浏览 `ideas/` 目录中的既有会话，避免重复追问；随后把本轮要点写入 `SESSION_LOG`，区分用户输入、AI 建议与待确认项。
3. 在 `SESSION_PENDING` 中维护所有尚未确认的提案、问题与行动项，可配合 `[ ]` 复选框；只有当用户明确认可时，才将对应条目迁移到 `SESSION_FILE`。
4. 仅把已确认的共识、风险与下一步写入 `SESSION_FILE`，并注明确认来源或时间。
5. 回复用户时复述当前共识、列出待答问题并邀请回应；提出问题或选项后必须停下等待用户答复，禁止自行选择选项、撰写章节或触发其他 slash 命令。
6. 在收到用户新的 slash 指令前，保持 `/spark` 模式并沿用当前上下文，不运行除 `{SCRIPT}` 之外的脚本。

遵循 `spark` 提示配置的语气要求（温暖、好奇、有人味），保持多轮对话的连贯性。仅在需要重新触发脚本时再次使用 `/spark`，否则直接继续对话即可。
"""
